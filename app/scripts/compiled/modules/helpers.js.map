{"version":3,"sources":["modules/helpers.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;;AAElB,CAAC,UAAS,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;;AAEnC,gBAAY,CAAC;;;;;;AAMb,MAAE,CAAC,OAAO,GAAG,CAAC,YAAU;;;AAGpB,YAAI,IAAI,GAAG,IAAI;YACX,QAAQ,GAAG;AACP,yBAAa,EAAG,IAAI;SACvB,CAAC;;;;;;;;;;AAUN,YAAI,OAAO,GAAG,SAAV,OAAO,CAAY,MAAM,EAAE,IAAI,EAAE;;AAE1C,gBAAI,OAAO,GAAG,MAAM,CAAC;AACrB,gBAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;AAE1B,mBAAO,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;AAC1F,uBAAO,GAAG,OAAO,CAAC,UAAU,CAAC;aAC7B;;AAEQ,gBAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;AAAE,uBAAO,KAAK,CAAC;aAAE;AACxE,mBAAO,OAAO,CAAC;SAET,CAAC;;;;;;;;AAQF,YAAI,YAAY,GAAG,SAAf,YAAY,CAAY,MAAM,EAAE,UAAU,EAAE;;AAErD,gBAAI,OAAO,GAAG,MAAM,CAAC;AACrB,gBAAI,SAAS,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;;AAEzC,mBAAO,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,EAAG;AACnF,uBAAO,GAAG,OAAO,CAAC,UAAU,CAAC;aAC7B;;AAEQ,gBAAI,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;AAAE,uBAAO,KAAK,CAAC;aAAE;AACxE,mBAAO,OAAO,CAAC;SAET,CAAC;;;;;;;;AASF,YAAI,SAAS,GAAG,SAAZ,SAAS,CAAa,EAAE,EAAE,SAAS,EAAG;AACtC,gBAAI,EAAE,CAAC,SAAS,EAAE;AACd,uBAAO,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAC3C,MAAM;AACH,uBAAO,IAAI,MAAM,CAAC,OAAO,GAAG,SAAS,GAAG,OAAO,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;aAC7E;SACJ,CAAA;;;;;;;;AASD,YAAI,gBAAgB,GAAG,SAAnB,gBAAgB,CAAY,QAAQ,EAAE;AACtC,gBAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAChD,gBAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAE5B,iBAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;AAC5B,oBAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9B,oBAAK,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;AAAE,2BAAO,IAAI,CAAC,CAAC,CAAC,CAAC;iBAAE;aAChD;AACD,mBAAO,KAAK,CAAE;SACjB,CAAA;;;;AAID,YAAI,MAAM,GAAG;AAClB,mBAAO,EAAE,OAAO;AACP,wBAAY,EAAE,YAAY;AAC1B,4BAAgB,EAAE,gBAAgB;SACrC,CAAC;;AAEF,eAAO,MAAM,CAAC;KACjB,CAAA,EAAG,CAAC;CAGR,CAAA,CAAE,MAAM,EAAE,QAAQ,CAAC,CAAC","file":"modules/helpers.js","sourcesContent":["var ns = ns || {};\n\n(function(window, document, undefined) {\n\n    'use strict';\n\n    /**\n    * helpers Module\n    */\n\n    ns.helpers = (function(){\n\n    \t// App settings\n        var self = this,\n            settings = {\n                activeSection : null,\n            };\n        \n        //////////////////\n\n        /**\n        * @name closest\n        * @desc Walks up the DOM and returns the closest parent element of supplied tag type\n        * @attr origin (HTMLElement) - Start element in DOM\n        * @attr elem (string) - Tagname to look for\n        */\n        var closest = function(origin, elem) {\n\t\t\t\n\t\t\tvar current = origin;\n\t\t\telem = elem.toLowerCase();\n\t\t\t\n\t\t\twhile (current.tagName.toLowerCase() !== 'body' && current.tagName.toLowerCase() !== elem) {\n\t\t\t\tcurrent = current.parentNode;\n\t\t\t}\n            \n            if (current.tagName.toLowerCase() === 'body') { return false; }\n\t\t\treturn current;\n\n        };\n\n        /**\n        * @name closestClass\n        * @desc Walks up the DOM and returns the closest parent element of supplied class\n        * @attr origin (HTMLElement) - Start element in DOM\n        * @attr className (string) - Classname to look for\n        */\n        var closestClass = function(origin, _className) {\n\t\t\t\n\t\t\tvar current = origin;\n\t\t\tvar className = _className.toLowerCase();\n\t\t\t\n\t\t\twhile (current.tagName.toLowerCase() !== 'body' && !_hasClass(current, className) ) {\n\t\t\t\tcurrent = current.parentNode;\n\t\t\t}\n            \n            if (current.tagName.toLowerCase() === 'body') { return false; }\n\t\t\treturn current;\n\n        };\n        \n        \n        /**\n        * @name _hasClass\n        * @desc Checks if element has class, returns true if so\n        * @attr el (HTMLelement) - Element to check\n        * @attr className (string) - Class to look for\n        */\n        var _hasClass = function( el, className ) {\n            if (el.classList) {\n                return el.classList.contains(className);\n            } else {\n                return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\n            }\n        }\n        \n        \n        /**\n        * @name getQueryVariable\n        * @desc Checks URL for query variable\n        * @attr variable (string) - var to check\n        * @returns value (string), false if none found\n        */\n        var getQueryVariable = function(variable) {\n            var query = window.location.search.substring(1);\n            var vars = query.split('&');\n            \n            for (var i=0;i<vars.length;i++) {\n                var pair = vars[i].split('=');\n                if ( pair[0] == variable ){ return pair[1]; }\n            }\n            return(false);\n        }\n\n        //////////////////\n\n        var module = {\n\t\t\tclosest: closest,\n            closestClass: closestClass,\n            getQueryVariable: getQueryVariable\n        };\n\n        return module;\n    })();\n\n  \n})(window, document);"],"sourceRoot":"/source/"}